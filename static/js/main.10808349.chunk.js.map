{"version":3,"sources":["recoil/authentication/atom.js","recoil/authentication/selector.js","configs/axios.js","configs/api/auth.js","configs/api/profile.js","configs/api/seller.js","configs/api/food.js","assets/images/SmartCanteenLogo.svg","components/pages/Login/index.js","components/pages/ProtectedRoute/index.js","components/shared/DashboardDrawer/index.js","components/shared/DashboardContent/index.js","assets/images/ProfileAvatar.svg","components/shared/ProfileCard/index.js","components/shared/DashboardBreadcrumb/index.js","components/shared/SettingsButton/index.js","components/shared/StatsCard/index.js","components/shared/StatsList/index.js","assets/images/morning-bg.svg","assets/images/night-bg.svg","components/shared/GreetingCard/index.js","components/shared/DashboardTopNav/index.js","assets/images/SellerAvatar.svg","components/shared/SellerProfileCard/index.js","components/shared/SellerProfileList/index.js","components/pages/Dashboard/index.js","components/pages/Profile/index.js","components/pages/Seller/index.js","components/pages/SellerAdd/index.js","components/pages/SellerDetail/index.js","App.js","theme.js","index.js"],"names":["tokenAdmin","localStorage","getItem","authStatus","profileData","JSON","parse","authState","atom","key","default","token","isAuthenticated","authProfileData","selector","get","console","log","set","payload","a","headers","process","instance","axios","create","baseURL","submitLogin","formData","URLSearchParams","append","email","password","post","then","res","setItem","data","catch","err","response","logout","removeItem","success","message","getProfile","Authorization","stringify","getAllSeller","getSellerByAdmin","uuid","registerSeller","firstName","lastName","phoneNumber","method","url","getSellerFood","cardWidth","Login","toast","useToast","history","useHistory","useRecoilValue","useEffect","push","useState","loginData","setLoginData","isLoading","setIsLoading","handleChange","e","target","name","value","state","handleSubmit","useRecoilCallback","title","status","duration","isClosable","className","d","flexDir","minW","minH","justifyContent","alignItems","p","mb","bg","maxW","border","borderColor","borderTop","borderTopColor","src","SmartCanteenLogo","boxSize","for","type","borderRadius","onChange","bgColor","color","w","onClick","textAlign","as","href","ProtectedRoute","Component","component","rest","render","props","to","menuList","label","uri","DashboardDrawer","currentPath","useLocation","pathname","variant","isOpen","placement","motionPreset","autoFocus","blockScrollOnMount","closeOnOverlayClick","trapFocus","useInert","map","menu","index","colorScheme","width","textTransform","fontSize","DashboardContent","children","marginLeft","px","ProfileCard","setProfileData","lastProfileData","getProfileData","first_name","setLastProfileData","ProfileAvatar","mr","py","DashboardBreadcrumb","breadcrumbData","item","fontWeight","length","SettingsButton","handleLogout","Button","rightIcon","ChevronDown","SettingsIcon","isFullWidth","StatsCard","background","description","display","size","StatsList","Fragment","columns","sm","md","lg","spacing","GreetingCard","currentDate","Date","currentStatus","getHours","hours","minutes","getMinutes","seconds","getSeconds","currentTime","setCurrentTime","setInterval","updateDate","captionColor","greetingText","bgImage","NightImage","MorningImage","bgSize","bgPos","bgRepeat","textColor","last_name","DashboardTopNav","shadow","cardHeight","SellerProfileCard","sellerName","sellerDesc","sellerPhone","link","maxH","pb","pt","SellerAvatar","mt","my","Phone","borderBottomRadius","SellerProfileList","sellerData","setSellerData","updateTotalSeller","getAllSellerData","undefined","seller","id_penjual","no_telp","breadCrumbItem","Dashboard","Profile","Seller","totalSeller","setTotalSeller","SellerAdd","maxWidth","SellerDetail","match","params","foodData","setFoodData","getFood","tenant","id_warung","getSellerData","makeStyles","root","minWidth","margin","pos","marginBottom","style","nama_warung","Edit","Delete","Card","TableContainer","TableRow","TableCell","food","App","createBrowserHistory","path","exact","customTheme","extendTheme","colors","primary","500","900","bgcolor","components","Drawer","variants","alwaysOpen","parts","dialog","pointerEvents","dialogContainer","ReactDOM","theme","StrictMode","document","getElementById"],"mappings":"oVAEMA,EAAaC,aAAaC,QAAQ,eAAiBD,aAAaC,QAAQ,eAAiB,GACzFC,EAA4B,KAAfH,EACbI,EAAcH,aAAaC,QAAQ,gBAAkBG,KAAKC,MAAML,aAAaC,QAAQ,iBAAmB,KACjGK,EAAYC,YAAK,CAC1BC,IAAI,YACJC,QAAQ,CACJC,MAAMX,EACNY,gBAAgBT,KAIXU,EAAkBL,YAAK,CAChCC,IAAI,kBACJC,QAAQN,I,GCXeU,YAAS,CAChCL,IAAI,cACJM,IAAK,kBAAMC,QAAQC,IAAI,WACvBC,IAAI,WAAD,4BAAE,WAAOC,GAAP,SAAAC,EAAA,gFAAmB,YAAW,EAATF,IACtBF,QAAQC,IAAR,UAAuBE,MADtB,2CAAF,mDAAC,K,iBCLFE,EAAU,CACZ,eAAgB,oCAChB,8BAA8B,GAA9B,OAAkCC,4CAUvBC,EAREC,IAAMC,OAAO,CAC1BC,QAASJ,0CACTD,QAAQA,ICLCM,EAAW,uCAAG,WAAOR,GAAP,eAAAC,EAAA,6DACjBQ,EAAW,IAAIC,iBACZC,OAAO,QAASX,EAAQY,OACjCH,EAASE,OAAO,WAAYX,EAAQa,UAHb,kBAOnBR,EAAMS,KAAK,eAAgBL,GACrBM,MAAK,SAAAC,GAAQ,IAAD,EAET,OADAlC,aAAamC,QAAQ,cAArB,UAAoCD,EAAIE,YAAxC,aAAoC,EAAUA,KAAK1B,OAC5CwB,KAEVG,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAZJ,iGAcZ,UAdY,yDAAH,sDAkBXC,EAAM,uCAAG,sBAAArB,EAAA,sEACZnB,aAAayC,WAAW,eADZ,uBAEZzC,aAAayC,WAAW,gBAFZ,gCAGZ,CACFC,SAAQ,EACRC,QAAQ,oBALM,2CAAH,qDCnBNC,EAAU,uCAAG,WAAOlC,GAAP,SAAAS,EAAA,+EAETI,EACVT,IAAI,SAAU,CACbM,QAAS,CACPyB,cAAcnC,KAGjBuB,MAAK,SAACC,GAEL,OADAlC,aAAamC,QAAQ,eAAgB/B,KAAK0C,UAAUZ,EAAIE,KAAKA,OACtDF,KAERG,OAAM,SAACC,GAAD,OAASA,EAAIC,YAZA,iGAcf,UAde,wDAAH,sDCAVQ,EAAY,uCAAG,WAAOrC,GAAP,SAAAS,EAAA,+EAEPI,EACVT,IAAI,eAAgB,CACnBM,QAAS,CACPyB,cAAenC,KAIlBuB,MAAK,SAACC,GAAD,OAASA,KACdG,OAAM,SAACC,GAAD,OAASA,EAAIC,YAVF,iGAab,UAba,wDAAH,sDAiBZS,EAAgB,uCAAG,WAAOtC,EAAMuC,GAAb,SAAA9B,EAAA,+EAEbI,EACVT,IAAI,YAAYmC,EAAM,CACrB7B,QAAS,CACPyB,cAAenC,KAIlBuB,MAAK,SAACC,GAAD,OAASA,KACdG,OAAM,SAACC,GAAD,OAASA,EAAIC,YAVI,iGAanB,UAbmB,wDAAH,wDAiBhBW,EAAc,uCAAG,WAAOxC,EAAOQ,GAAd,eAAAC,EAAA,6DAC1BJ,QAAQC,IAAR,UAAuBE,IACjBS,EAAW,IAAIC,iBACZC,OAAO,aAAcX,EAAQiC,WACtCxB,EAASE,OAAO,YAAaX,EAAQkC,UACrCzB,EAASE,OAAO,QAASX,EAAQY,OACjCH,EAASE,OAAO,WAAYX,EAAQa,UACpCJ,EAASE,OAAO,UAAWX,EAAQmC,aAPT,mBASb9B,EAAM,CACjBH,QAAQ,CACNyB,cAAcnC,GAEhB4C,OAAQ,OACRC,IAAK,oBACLnB,KAAMT,IAfkB,oGA2BnB,UA3BmB,0DAAH,wDClCd6B,EAAa,uCAAG,WAAOP,GAAP,SAAA9B,EAAA,+EAEVI,EACVT,IAAI,sBAAsBmC,EAAM,IAGhChB,MAAK,SAACC,GAAD,OAASA,KACdG,OAAM,SAACC,GAAD,OAASA,EAAIC,YAPC,iGAUhB,UAVgB,wDAAH,sDCFX,MAA0B,6C,OCiBnCkB,EACI,MADJA,EAEI,MAsGKC,EAnGD,WACZ,IAAMC,EAAQC,cACRC,EAAUC,cACTnD,EAAmBoD,YAAezD,GAAlCK,gBAEPqD,qBAAU,WACHrD,GAAiBkD,EAAQI,KAAK,OACnC,IAPgB,MAQeC,mBAAS,CACxCpC,MAAM,GACNC,SAAS,KAVO,mBAQZoC,EARY,KAQDC,EARC,OAYeF,oBAAS,GAZxB,mBAYZG,EAZY,KAYDC,EAZC,KAcZC,EAAe,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACdP,GAAa,SAACQ,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBF,EAAOC,QAGzCE,EAAeC,YAAiB,uCAAE,iCAAA3D,EAAA,6DAAQF,EAAR,EAAQA,IAC9CqD,GAAa,GADyB,SAEf5C,EAAYyC,GAFG,gBAE9B/B,EAF8B,EAE9BA,KACRrB,QAAQC,IAAR,OAAoBoB,GAChBA,EAAKM,SAQPzB,EAAIX,EAAD,YAAC,eAAeA,GAAhB,IAA2BI,MAAK,OAAC0B,QAAD,IAACA,OAAD,EAACA,EAAMA,KAAK1B,MAAOC,iBAAgB,KACtEkD,EAAQI,KAAK,MARbN,EAAM,CACJoB,MAAM3C,EAAKO,QACXqC,OAAQ,QACRC,SAAU,IACVC,YAAY,IAMhBZ,GAAa,GAfyB,2CAAF,uDAkBtC,OACE,eAAC,IAAD,CACEa,UAAU,qBACVC,EAAE,OACFC,QAAQ,SACRC,KAAK,OACLC,KAAK,QACLC,eAAe,SACfC,WAAW,SAPb,UASE,eAAC,IAAD,CACEN,UAAU,YACVO,EAAG,EACHC,GAAI,EACJC,GAAG,QACHN,KAAM,CAAC7B,EAAkBA,EAAkBA,GAC3CoC,KAAMpC,EACNqC,OAAO,YACPC,YAAY,kBACZC,UAAU,YACVC,eAAe,cAVjB,UAYA,cAAC,IAAD,CAAKN,GAAI,GAAIP,EAAE,OAAOI,eAAe,SAASC,WAAW,SAAzD,SACE,cAAC,IAAD,CAAOS,IAAKC,EAAkBC,QAAQ,UAEtC,eAAC,IAAD,CAAKT,GAAI,EAAT,UACE,cAAC,IAAD,CAAWU,IAAI,QAAf,2BACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,OAAO5B,KAAK,QAAQ6B,aAAa,IAAIC,SAAUjC,SAI/D,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACE,cAAC,IAAD,CAAWU,IAAI,WAAf,sBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,WAAW5B,KAAK,WAAW6B,aAAa,IAAIC,SAAUjC,SAItE,cAAC,IAAD,CAAKoB,GAAI,EAAT,SACE,cAAC,IAAD,CAAQc,QAAQ,cAAcC,MAAM,QAAQH,aAAa,IAAII,EAAE,OAAOC,QAAS/B,EAAcR,UAAWA,EAAxG,wBAMJ,eAAC,IAAD,CACEc,UAAU,YACVO,EAAG,EACHE,GAAG,QACHN,KAAM,CAAC7B,EAAkBA,EAAkBA,GAC3CoC,KAAMpC,EACNqC,OAAO,YACPC,YAAY,kBACZc,UAAU,SARZ,8BAUmB,cAAC,IAAD,CAAMC,GAAG,IAAT,SAAa,mBAAGC,KAAK,IAAR,wC,SClGvBC,EAZQ,SAAC,GAAsC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACnDnC,EAASjB,YAAezD,GAC9B,OACI,cAAC,IAAD,2BACQ6G,GADR,IAEIC,OACI,SAACC,GAAD,OAAkB,OAANrC,QAAM,IAANA,OAAA,EAAAA,EAAQrE,iBAAkB,cAACsG,EAAD,eAAeI,IAAW,cAAC,IAAD,CAAUC,GAAG,gB,iBCQvFC,EAAW,CACb,CAACC,MAAM,OAAQC,IAAI,KACnB,CAACD,MAAM,SAAUC,IAAI,YA0CVC,EAvCS,WACpB,IAAMC,EAAcC,cAAcC,SACpC,OACE,cAAC,IAAD,CAAQC,QAAQ,aAAaC,QAAM,EAACC,UAAU,OAAOC,aAAa,OAAOC,WAAW,EAAOC,oBAAoB,EAAOC,qBAAqB,EAAOC,WAAW,EAAOC,UAAU,EAA9K,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAc3C,GAAI,GAAlB,SACI,cAAC,IAAD,CAAKP,EAAE,OAAOI,eAAe,SAASC,WAAW,SAAjD,SACI,cAAC,IAAD,CAAOS,IAAKC,EAAkBC,QAAQ,YAG9C,eAAC,IAAD,WACA,cAAC,IAAD,CAAMkB,GAAG,WAAT,SACI,cAAC,IAAD,CAAK3B,GAAI,EAAT,SACI,cAAC,GAAD,QAGP4B,EAASgB,KAAI,SAACC,EAAKC,GAAN,OACV,cAAC,IAAD,CAAMnB,GAAIkB,EAAKf,IAAf,SACI,cAAC,IAAD,CAAQiB,YAAY,UAAW/C,GAAI,EAAGmC,QAASH,IAAgBa,EAAKf,IAAM,QAAU,QAASkB,MAAM,OAAnG,SACI,cAAC,IAAD,CAAMhC,EAAE,OAAOE,UAAU,OAAO+B,cAAc,aAA9C,SACKJ,EAAKhB,WAHOiB,SAU7B,cAAC,IAAD,UACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAMI,SAAS,KAAf,qEC/CCC,GAJU,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACvB,OAAS,cAAC,IAAD,CAAKC,WAAW,QAAQtD,EAAG,EAAGuD,GAAI,EAAlC,SAAsCF,KCHpC,OAA0B,0CC+C1BG,GAzCK,WAAO,IAAD,EACehF,mBAAS,CAC1Cf,UAAU,GACVrB,MAAM,KAHY,mBAChB3B,EADgB,KACHgJ,EADG,KAKfzI,EAASqD,YAAezD,GAAxBI,MACD0I,EAAkBrF,YAAenD,GAoBvC,OAlBAoD,qBAAU,WACN,IAAMqF,EAAc,uCAAG,4BAAAlI,EAAA,sEACIyB,EAAWlC,GADf,OACb6B,EADa,OAEnB4G,EAAe,2BAAIhJ,GAAL,IAAkBgD,UAAS,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAUH,KAAKA,KAAKkH,WAAYxH,MAAK,OAACS,QAAD,IAACA,OAAD,EAACA,EAAUH,KAAKA,KAAKN,SAFjF,2CAAH,qDAMdyH,EAAkB,uCAAG,sBAAApI,EAAA,sDACvBJ,QAAQC,IAAR,kBAA+BoI,GAC/BD,EAAe,2BAAIhJ,GAAL,IAAkBgD,UAAS,OAACiG,QAAD,IAACA,OAAD,EAACA,EAAiBE,WAAYxH,MAAK,OAACsH,QAAD,IAACA,OAAD,EAACA,EAAiBtH,SAFvE,2CAAH,qDAKH,OAAlBsH,EACCC,IAEAE,MAEL,IAEC,eAAC,IAAD,CAAK7D,EAAG,EAAGe,QAAQ,cAAcF,aAAc,EAAGnB,EAAE,cAApD,UACI,cAAC,IAAD,CAAOc,IAAKsD,GAAepD,QAAQ,MAAMqD,GAAI,IAC7C,eAAC,IAAD,CAAKC,GAAI,EAAGhD,MAAM,QAAlB,UACI,eAAC,IAAD,CAAKtB,EAAE,cAAcK,WAAW,SAAhC,UACA,cAAC,IAAD,CAAMgE,GAAI,EAAV,iBACA,cAAC,IAAD,CAAMZ,SAAS,KAAK/B,GAAG,IAAI8B,cAAc,aAAzC,SAAuDzI,EAAYgD,eAGnE,cAAC,IAAD,CAAM0F,SAAS,KAAf,SAAqB1I,EAAY2B,e,UCnBlC6H,GAjBa,SAAAtC,GAAU,IAC1BuC,EAAmBvC,EAAnBuC,eACR,OACI,cAAC,KAAD,iBACKA,QADL,IACKA,OADL,EACKA,EAAgBrB,KAAK,SAACsB,EAAMpB,GAAP,OAClB,cAAC,KAAD,UACI,cAAC,IAAD,CAAMnB,GAAIuC,EAAKpC,IAAf,SACI,cAAC,IAAD,CAAMmB,cAAc,aAAakB,WAAYrB,IAAUmB,EAAeG,OAAO,EAAI,OAAS,SAA1F,SACKF,EAAKrC,WAHGiB,S,wCCwCtBuB,GAjCQ,WACnB,IAAMnG,EAAUC,cACVH,EAAQC,cACRqG,EAAenF,YAAiB,uCAAE,iCAAA3D,EAAA,6DAAQF,EAAR,EAAQA,IAAR,SACLuB,IADK,gBAChCG,EADgC,EAChCA,QADgC,EACvBD,UAETiB,EAAM,CACFoB,MAAMpC,EACNqC,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEhBjE,EAAIX,EAAD,YAAC,eAAeA,GAAhB,IAA2BI,MAAM,GAAIC,iBAAgB,KACxDkD,EAAQI,KAAK,WAVmB,2CAAF,uDAaxC,OACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAY6C,GAAIoD,IAAQC,UAAW,cAACC,GAAA,EAAD,IAAqB3D,QAAQ,cAAhE,SACE,eAAC,IAAD,CAAKrB,EAAE,OAAOK,WAAW,SAASD,eAAe,SAAjD,UACE,cAAC,KAAD,CAAMsB,GAAIuD,KAAcZ,GAAI,IAC5B,cAAC,IAAD,4BAGJ,cAAC,KAAD,UACE,cAAC,KAAD,UACE,cAAC,IAAD,CAAQa,aAAW,EAACxC,QAAQ,QAAQlB,QAASqD,EAA7C,4B,UCpBKM,GApBG,SAAAlD,GAC6BA,EAAnCmD,WADgB,IACJC,EAAuBpD,EAAvBoD,YAAa9F,EAAU0C,EAAV1C,MAMjC,OACI,eAAC,IAAD,2BAAS0C,GAAT,IAAgBlC,UAAU,aAAaG,KAAK,MAAMC,KAAK,QAAQmF,QAAQ,OAAOrF,QAAQ,SAASI,WAAW,SAASD,eAAe,SAASE,EAAG,EAAGa,aAAc,EAAGG,MAAM,QAAxK,UACI,cAAC,KAAD,CAASf,GAAG,IAAIgF,KAAK,MAArB,SAA4BhG,IAC5B,cAAC,IAAD,CAAMiE,cAAc,aAApB,SAAkC6B,S,UCA/BG,GAVG,SAAC,GAAgB,IAAf7B,EAAc,EAAdA,SAChB,OACI,cAAC,IAAM8B,SAAP,UACI,cAAC,KAAD,CAAYC,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAAvD,SACKnC,OCPF,OAA0B,uCCA1B,OAA0B,qCCqF1BoC,GA7EM,WACjB,IAAMC,EAAc,IAAIC,KAClBlL,EAAc4D,YAAenD,GAE7B0K,EAAgB,SAACF,GACnB,OAAGA,EAAYG,WAAa,GAAW,UAC/BH,EAAYG,WAAa,GAAW,YAChC,SAPO,EASarH,mBAAS,CAC3CsH,MAAMJ,EAAYG,WAClBE,QAAQL,EAAYM,aACpBC,QAAQP,EAAYQ,eAZC,mBASlBC,EATkB,KASLC,EATK,KAgBvB9H,qBAAU,WACN+H,aAAY,WACR,IAAMC,EAAa,IAAIX,KACvBS,EAAe,2BACZD,GADW,IAEdL,MAAOQ,EAAWT,WAClBE,QAASO,EAAWN,aACpBC,QAAQK,EAAWJ,kBAEvB,KACF7K,QAAQC,IAAI,WACb,IAEH,IACIiL,EAAe,GACfC,EAAe,GACfC,EAAU,KACd,OAAQb,EAAcF,IACpB,IAAK,QACU,UACba,EAAe,OACfC,EAAe,oBACfC,EAAUC,GACV,MACF,IAAK,UACL,IAAK,YACY,UACbH,EAAe,UACfC,EAAe,kBACfC,EAAUE,GACZ,MAEF,QACiB,OACbJ,EAAe,OAErB,OACE,eAAC,IAAD,CACE7G,EAAE,OACFC,QAAQ,SACRI,WAAW,SACXD,eAAe,SACfE,EAAG,EACHa,aAAc,EACd4F,QAAO,cAASA,EAAT,KACPG,OAAO,QACP/G,KAAK,QACLgH,MAAM,SACNC,SAAS,YAXX,UAaE,cAAC,IAAD,CAAK7G,GAAG,OAAR,SACE,eAAC,KAAD,CAASkD,SAAS,QAAQ4D,UAA0C,UAA/BnB,EAAcF,GAA2B,UAAY,UAA1F,WAAuGS,EAAYL,MAAM,GAAG,IAAI,IAAMK,EAAYL,MAAlJ,KAA2JK,EAAYJ,QAAQ,GAAG,IAAI,IAAMI,EAAYJ,aAE1M,eAAC,IAAD,CAAK5E,UAAU,SAAf,UACI,eAAC,IAAD,CAAMgC,SAAS,OAAOiB,WAAW,OAAO2C,UAAWR,EAAcrD,cAAc,aAA/E,kBAAkG0C,EAAcF,GAAhH,MAA2I,OAAXjL,QAAW,IAAXA,OAAA,EAAAA,EAAamJ,YAAa,KAA1B,OAAgCnJ,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAauM,cAC7K,cAAC,IAAD,CAAM7D,SAAS,OAAO4D,UAAWR,EAAcrD,cAAc,aAA7D,SAA2EsD,WC9DtES,GAbS,SAAC,GAAgB,IAAf5D,EAAc,EAAdA,SACtB,OACI,cAAC,IAAD,CAAK5D,UAAU,yBAAyBsB,QAAQ,QAAQmG,OAAO,KAA/D,SACI,cAAC,GAAD,UACI,eAAC,IAAD,CAAKxH,EAAE,OAAOK,WAAW,SAASD,eAAe,gBAAjD,UACKuD,EACD,cAAC,GAAD,Y,oBCVL,OAA0B,yCCOnCtF,GAAY,OAEZoJ,GAAa,QAoEJC,GAlEW,SAAAzF,GAAU,IAC1B0F,EAAwC1F,EAAxC0F,WAAYC,EAA4B3F,EAA5B2F,WAAYC,EAAgB5F,EAAhB4F,YAC1BC,EAAO,kBAAkBF,EAC/B,OACE,cAAC,IAAD,CACEzH,KAAMsH,GACNM,KAAMN,GACNtG,aARgB,GAShBjB,KAAM7B,GACNoC,KAAMpC,GACN2J,GAAI,EACJC,GAAI,EACJT,OAAO,KACPnG,QAAQ,QACRrB,EAAE,cAVJ,SAYE,eAAC,IAAD,CACEA,EAAE,OACFC,QAAQ,SACRI,WAAW,SACXD,eAAe,SAJjB,UAOE,cAAC,IAAD,CAAOU,IAAKoH,GAAclH,QAAQ,MAAMmH,GAAI,EAAG5H,GAAI,IACnD,eAAC,IAAD,CAAKkB,UAAU,SAASoC,GAAI,EAA5B,UACE,eAAC,IAAD,CAAKuE,GAAI,EAAT,UACE,cAAC,KAAD,CAAS3E,SAAS,KAAKlD,GAAI,EAA3B,SACIoH,IAEJ,cAAC,IAAD,UAAQC,OAEV,cAAC,KAAD,IACA,eAAC,IAAD,CACEQ,GAAI,EACJpI,EAAE,cACFK,WAAW,SACXN,UAAU,eAJZ,UAME,cAACsI,GAAA,EAAD,CAAW/G,MAAM,iBAAiB+C,GAAI,IACtC,cAAC,IAAD,CAAM/C,MAAM,iBAAZ,SAA+BuG,UAGnC,cAAC,IAAD,CAAK3H,KAAK,OAAV,SACE,cAAC,IAAD,CAAMgC,GAAI4F,EAAV,SACE,cAAC,IAAD,CACE3G,aAAa,IACbE,QAAQ,cACRC,MAAM,QACN4D,aAAW,EACX/E,KAAK,OACLmI,mBAnDQ,GA6CV,+B,UCXGC,GAtCW,SAAAtG,GAAU,IAC1B3G,EAAUqD,YAAezD,GAAzBI,MADyB,EAEGwD,qBAFH,mBAE1B0J,EAF0B,KAEdC,EAFc,KAkBjC,OAfA7J,qBAAU,YACc,uCAAG,gCAAA7C,EAAA,sEACA4B,EAAarC,GADb,UACjB6B,EADiB,OAEvBxB,QAAQC,IAAR,iBAA8BuB,GAFP,SAGNA,QAHM,IAGNA,OAHM,EAGNA,EAAUH,KAAnBA,EAHe,EAGfA,MACLG,EAASH,KAAKM,QAJM,gCAKbmL,EAAczL,GALD,OAMnBiF,EAAMyG,kBAAkB1L,EAAK2H,QANV,2CAAH,qDAUtBgE,KACC,IACHhN,QAAQC,IAAR,aAA0B4M,QAEPI,IAAfJ,EAEI,cAAC,IAAM/C,SAAP,UACI,cAAC,KAAD,MAMV,eAAC,IAAMA,SAAP,WACE,cAAC,KAAD,CAAShC,SAAS,WAAWlD,GAAI,EAAjC,0BACA,cAAC,KAAD,CAAYmF,QAAS,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAKC,QAAS,EAAvD,gBACG0C,QADH,IACGA,OADH,EACGA,EAAYrF,KAAI,SAAC0F,EAAQxF,GAAT,OACf,cAAC,GAAD,CAA+BsE,WAAYkB,EAAO3E,WAAY0D,WAAYiB,EAAOC,WAAYjB,YAAagB,EAAOE,SAAzF1F,YCjC5B2F,GAAiB,CACnB,CAAC5G,MAAM,OAAQC,IAAI,MA4BR4G,GAzBG,WACd,OACI,eAAC,IAAD,CAAK9I,KAAK,QAAV,UACI,cAAC,EAAD,IAEA,cAAC,GAAD,UACI,cAAC,GAAD,CAAqBqE,eAAgBwE,OAGzC,cAAC,GAAD,UACI,cAAC,GAAD,UCPDE,GATC,WACZ,OACI,gCACI,cAAC,EAAD,IADJ,kB,UCSFF,GAAiB,CAAC,CAAE5G,MAAO,SAAUC,IAAK,YA6BjC8G,GA5BA,WAAO,IAAD,EACmBrK,qBADnB,mBACZsK,EADY,KACCC,EADD,KAEnB,OACE,eAAC,IAAD,CAAKlJ,KAAK,QAAV,UACE,cAAC,EAAD,IAEA,cAAC,GAAD,UACE,cAAC,GAAD,CAAqBqE,eAAgBwE,OAGvC,eAAC,GAAD,CAAkB7I,KAAK,QAAvB,UACE,cAAC,KAAD,CAAWJ,UAAU,+BAA+BU,KAAK,OAAOF,GAAI,EAApE,SACE,cAAC,GAAD,UACE,cAAC,GAAD,CACE6E,WAAW,cACX7F,MAAO6J,EACP/D,YAAY,0BAIlB,cAAC,KAAD,CAAWtF,UAAU,+BAA+BU,KAAK,OAAzD,SACE,cAAC,GAAD,CAAmBiI,kBAAmBW,aC5B1CL,GAAiB,CACnB,CAAE5G,MAAO,SAAUC,IAAK,WACxB,CAAED,MAAO,aAAcC,IAAK,gBAoFjBiH,GA3EG,WAAO,IACdhO,EAASqD,YAAezD,GAAxBI,MADa,EAEgBwD,mBAAS,CACzCf,UAAU,GACVC,SAAS,GACTtB,MAAM,GACNC,SAAS,GACTsB,YAAY,KAPI,mBAEbuK,EAFa,KAEDC,EAFC,KAUdtJ,EAAe,SAACC,GAAO,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdkJ,GAAc,SAACjJ,GAAD,mBAAC,eAAgBA,GAAjB,kBAAyBF,EAAOC,QAG5CE,EAAeC,YAAiB,uCAAE,+BAAA3D,EAAA,+DAAQF,IAAR,SACbiC,EAAexC,EAAOkN,GADT,iBAC5BxL,EAD4B,EAC5BA,MACAM,SACJ3B,QAAQC,IAAIoB,GAHoB,2CAAF,uDAOtC,OACI,eAAC,IAAD,CAAKmD,KAAK,QAAV,UACI,cAAC,EAAD,IACA,cAAC,GAAD,UACI,cAAC,GAAD,CAAqBqE,eAAgBwE,OAGzC,cAAC,GAAD,CAAkB7I,KAAK,QAAvB,SACA,eAAC,KAAD,CAAWJ,UAAU,2BAA2BU,KAAK,OAAOF,GAAI,EAAhE,UACI,cAAC,KAAD,yBAGA,eAAC,IAAD,CAAKc,QAAQ,OAAO+G,GAAI,EAAG9H,EAAG,EAAGiJ,SAAS,MAA1C,UACI,eAAC,IAAD,CAAKhJ,GAAI,EAAT,UACI,cAAC,IAAD,CAAWU,IAAI,YAAf,wBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,OAAO5B,KAAK,YAAY6B,aAAa,IAAIC,SAAUjC,SAGvE,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACI,cAAC,IAAD,CAAWU,IAAI,WAAf,uBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,OAAO5B,KAAK,WAAW6B,aAAa,IAAIC,SAAUjC,SAGtE,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACI,cAAC,IAAD,CAAWU,IAAI,QAAf,mBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,OAAO5B,KAAK,QAAQ6B,aAAa,IAAIC,SAAUjC,SAGnE,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACI,cAAC,IAAD,CAAWU,IAAI,WAAf,sBACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,WAAW5B,KAAK,WAAW6B,aAAa,IAAIC,SAAUjC,SAG1E,eAAC,IAAD,CAAKoB,GAAI,EAAT,UACI,cAAC,IAAD,CAAWU,IAAI,cAAf,0BACA,cAAC,IAAD,UACI,cAAC,IAAD,CAAOC,KAAK,OAAO5B,KAAK,cAAc6B,aAAa,IAAIC,SAAUjC,SAGzE,cAAC,IAAD,CAAQkC,QAAQ,cAAcC,MAAM,QAAQH,aAAa,IAAIK,QAAS/B,EAAtE,kC,0FC+CL+J,GA5GM,SAACvH,GAAW,IACrB3G,EAAUqD,YAAezD,GAAzBI,MACAuC,EAASoE,EAAMwH,MAAMC,OAArB7L,KAFoB,EAGQiB,qBAHR,mBAGrB0J,EAHqB,KAGTC,EAHS,OAII3J,qBAJJ,mBAIrB6K,EAJqB,KAIXC,EAJW,KAK5BhL,qBAAU,WACN,IAAMiL,EAAO,uCAAG,WAAOhM,GAAP,mBAAA9B,EAAA,sEACWqC,EAAcP,GADzB,UACNV,EADM,gBAEKA,QAFL,IAEKA,OAFL,EAEKA,EAAUH,KAAnBA,EAFI,EAEJA,MACJG,EAASH,KAAKM,QAHN,gCAIFsM,EAAY5M,GAJV,2CAAH,uDASM,uCAAG,gCAAAjB,EAAA,sEACK6B,EAAiBtC,EAAOuC,GAD7B,UACZV,EADY,OAElBxB,QAAQC,IAAR,gBAA6BuB,GAFX,SAGDA,QAHC,IAGDA,OAHC,EAGDA,EAAUH,KAAnBA,EAHU,EAGVA,MACJG,EAASH,KAAKM,QAJA,gCAKRmL,EAAczL,GALN,OAMd6M,EAAO,OAAC7M,QAAD,IAACA,OAAD,EAACA,EAAM8M,OAAOC,WANP,2CAAH,qDAUnBC,KACD,IACH,IAAMhB,EAAiB,CACnB,CAAE5G,MAAO,SAAUC,IAAK,WACxB,CAAED,MAAO,SAAUC,IAAK,0BAAoBmG,QAApB,IAAoBA,OAApB,EAAoBA,EAAYM,cAE1CmB,aAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,OAAQ,GAEZC,IAAK,CACDC,aAAc,MAGtB,OACI,eAAC,IAAD,CAAKnK,KAAK,QAAV,UACI,cAAC,EAAD,IACA,cAAC,GAAD,UACI,cAAC,GAAD,CAAqBqE,eAAgBwE,MAEzC,cAAC,GAAD,CAAkB7I,KAAK,QAAvB,SACI,eAAC,KAAD,CAAWJ,UAAU,0BAA0BU,KAAK,OAAOF,GAAI,EAA/D,UACI,cAAC,IAAD,CAAKD,EAAG,EAAGe,QAAQ,cAAcZ,KAAK,OAAtC,SACI,eAAC,KAAD,WACI,cAAC,IAAD,CAAOK,IAAKsD,GAAepD,QAAQ,KAAKqD,GAAI,IAC5C,cAAC,KAAD,UACI,eAAC,IAAD,CAAK/C,MAAM,QAAQlB,eAAe,SAASkE,GAAI,EAA/C,UACI,cAAC,KAAD,WACe,OAAVkE,QAAU,IAAVA,OAAA,EAAAA,EAAYtE,YAAa,KAAzB,OAA+BsE,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAYlB,aAEhD,cAAC,IAAD,CAAMiD,MAAO,CAAE9G,SAAU,QAAzB,gBACK+E,QADL,IACKA,OADL,EACKA,EAAYsB,OAAOU,mBAIhC,cAACC,GAAA,EAAD,CAAMF,MAAO,CAAEjJ,MAAO,WACtB,cAACoJ,GAAA,EAAD,CAAQH,MAAO,CAAEjJ,MAAO,gBAGhC,cAACqJ,GAAA,EAAD,UACI,eAACC,GAAA,EAAD,WACI,eAACC,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC,IAAD,UACP,sBAAMP,MAAO,CAAE7F,WAAY,QAA3B,SAAsC,mBAE1C,cAACoG,GAAA,EAAD,UAAY,MACZ,cAACA,GAAA,EAAD,UAAYjN,OAEhB,eAACgN,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC,IAAD,UACP,sBAAMP,MAAO,CAAE7F,WAAY,QAA3B,SAAsC,cAE1C,cAACoG,GAAA,EAAD,UAAY,MACZ,cAACA,GAAA,EAAD,iBAAYtC,QAAZ,IAAYA,OAAZ,EAAYA,EAAY9L,WAE5B,eAACmO,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC,IAAD,UACP,sBAAMP,MAAO,CAAE7F,WAAY,QAA3B,SAAsC,oBAE1C,cAACoG,GAAA,EAAD,UAAY,MACZ,cAACA,GAAA,EAAD,iBAAYtC,QAAZ,IAAYA,OAAZ,EAAYA,EAAYO,aAE5B,eAAC8B,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,UAAW,cAAC,IAAD,UACP,sBAAMP,MAAO,CAAE7F,WAAY,QAA3B,SAAsC,eAE1C,cAACoG,GAAA,EAAD,UAAY,MACZ,cAACA,GAAA,EAAD,iBAAYtC,QAAZ,IAAYA,OAAZ,EAAYA,EAAYsB,OAAOU,sBA9C/C,OAmDKb,QAnDL,IAmDKA,OAnDL,EAmDKA,EAAUxG,KAAI,SAAC4H,EAAM1H,GAClB1H,QAAQC,IAAImP,eCjGrBC,IAlBQC,cACX,WACV,OACE,cAAC,IAAD,CAAKlL,UAAU,MAAMsB,QAAQ,cAA7B,SACE,cAAC,IAAD,CAAQ5C,SAAO,EAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyM,KAAK,SAASpJ,UAAWxD,EAAO6M,OAAK,IAC5C,cAAC,EAAD,CAAgBD,KAAK,IAAIpJ,UAAWmH,GAAWkC,OAAK,IACpD,cAAC,EAAD,CAAgBD,KAAK,WAAWpJ,UAAWoH,GAASiC,OAAK,IACzD,cAAC,EAAD,CAAgBD,KAAK,UAAUpJ,UAAWqH,GAAQgC,OAAK,IACvD,cAAC,EAAD,CAAgBD,KAAK,cAAcpJ,UAAWwH,GAAW6B,OAAK,IAC9D,cAAC,EAAD,CAAgBD,KAAK,uBAAuBpJ,UAAW0H,GAAc2B,OAAK,a,UCiBrEC,GAhBKC,aAAY,CAC5BC,OAAO,CACHC,QAAQ,CACJC,IAAI,UACJC,IAAI,WAERC,QAAQ,CACJF,IAAI,WAER7K,YAAY,CACR6K,IAAI,YAGZG,WA7Be,CAClBC,OAAQ,CACPC,SAAU,CACTC,WAAY,CACXC,MAAO,CAAC,2BACRC,OAAQ,CACPC,cAAe,QAEhBC,gBAAiB,CAChBD,cAAe,cCJpBE,IAASnK,OACP,cAAC,IAAD,CAAgBoK,MAAOhB,GAAvB,SACE,eAAC,IAAMiB,WAAP,WACE,cAAC,IAAD,IACA,cAAC,IAAD,UACE,cAAC,GAAD,WAINC,SAASC,eAAe,W","file":"static/js/main.10808349.chunk.js","sourcesContent":["import { atom, selectorFamily, selector } from 'recoil'\n\nconst tokenAdmin = localStorage.getItem('token_admin') ? localStorage.getItem('token_admin') : '' \nconst authStatus = tokenAdmin !== '' ? true : false\nconst profileData = localStorage.getItem('detail_admin') ? JSON.parse(localStorage.getItem('detail_admin')) : null\nexport const authState = atom({\n    key:'authState',\n    default:{\n        token:tokenAdmin,\n        isAuthenticated:authStatus,\n    }\n})\n\nexport const authProfileData = atom({\n    key:'authProfileData',\n    default:profileData\n})","import { selector, selectorFamily } from 'recoil'\n\nimport { authState } from './atom'\n\nexport const handleLogin = selector({\n    key:'handleLogin',\n    get: () => console.log(\"object\"),\n    set: async (payload) => ({set}) => {\n        console.log(`payload`, payload)\n    }\n})","import axios from 'axios'\n\nconst headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Access-Control-Allow-Origin': `${process.env.REACT_APP_URI}`,\n}\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_URI,\n    headers:headers,\n})\n\n// For accesing straight to 'data'\n// instance.interceptors.response.use((response)=>response.data)\n\nexport default instance","import axios from '../axios'\n\n\nexport const submitLogin = async (payload) => {\n    const formData = new URLSearchParams()\n    formData.append('email', payload.email)\n    formData.append('password', payload.password)\n\n    try{\n        return await \n        axios.post('/admin/login', formData)\n             .then(res => {\n                 localStorage.setItem('token_admin', res.data?.data.token)\n                 return res\n             })\n             .catch(err => err.response)\n    }catch{\n        return \"Failed\"\n    }\n}\n\nexport const logout = async () => {\n    await localStorage.removeItem('token_admin')\n    await localStorage.removeItem('detail_admin')\n    return{\n        success:true,\n        message:\"Berhasil Logout\"\n    }\n}","import axios from \"../axios\";\n\nexport const getProfile = async (token) => {\n  try {\n    return await axios\n      .get(\"/admin\", {\n        headers: {\n          Authorization:token,\n        },\n      })\n      .then((res) => {\n        localStorage.setItem('detail_admin', JSON.stringify(res.data.data))\n        return res;\n      })\n      .catch((err) => err.response);\n  } catch {\n    return \"Failed\";\n  }\n};\n","import axios from \"../axios\";\n\nexport const getAllSeller = async (token) => {\n    try{\n        return await axios\n          .get(\"/penjual/all\", {\n            headers: {\n              Authorization: token,\n            },\n          })\n      \n          .then((res) => res)\n          .catch((err) => err.response);\n\n    }catch{\n        return \"Failed\"\n    }\n};\n\nexport const getSellerByAdmin = async (token,uuid) => {\n  try{\n      return await axios\n        .get(\"/penjual/\"+uuid, {\n          headers: {\n            Authorization: token,\n          },\n        })\n    \n        .then((res) => res)\n        .catch((err) => err.response);\n\n  }catch{\n      return \"Failed\"\n  }\n};\n\nexport const registerSeller = async (token, payload) => {\n    console.log(`payload`, payload)\n    const formData = new URLSearchParams()\n    formData.append('first_name', payload.firstName)\n    formData.append('last_name', payload.lastName)\n    formData.append('email', payload.email)\n    formData.append('password', payload.password)\n    formData.append('no_telp', payload.phoneNumber)\n  try{\n    return await axios({\n      headers:{\n        Authorization:token\n      },\n      method: 'post',\n      url: '/penjual/register',\n      data: formData\n    });\n    // return await axios\n    //   .post(\"/penjual/register\", {\n    //     headers:{\n    //       Authorization: token\n    //     },\n    //     data:formData\n    //   })\n    //   .then((res) => res)\n    //   .catch((err) => err.response)\n  }catch{\n    return \"Failed\"\n  }\n}","import axios from \"../axios\";\n\nexport const getSellerFood = async (uuid) => {\n  try{\n      return await axios\n        .get(\"/makanan?id_warung=\"+uuid, {\n        })\n    \n        .then((res) => res)\n        .catch((err) => err.response);\n\n  }catch{\n      return \"Failed\"\n  }\n};","export default __webpack_public_path__ + \"static/media/SmartCanteenLogo.656e3a43.svg\";","import React, { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Image,\n  Text,\n  FormLabel,\n  Input,\n  InputGroup,\n  Button,\n  useToast\n} from \"@chakra-ui/react\";\nimport { useRecoilCallback, useRecoilValue } from \"recoil\";\nimport { useHistory } from \"react-router-dom\";\nimport { authState } from \"recoil/authentication/\";\nimport { submitLogin } from 'configs/api'\nimport SmartCanteenLogo from 'assets/images/SmartCanteenLogo.svg'\n\nconst cardWidth = {\n  webSize:'25%',\n  resSize:'80%'\n}\n\nconst Login = () => {\n  const toast = useToast()\n  const history = useHistory()\n  const {isAuthenticated} = useRecoilValue(authState);\n\n  useEffect(()=>{\n      if(isAuthenticated) history.push('/')\n  },[])\n  const[loginData, setLoginData] = useState({\n    email:'',\n    password:''\n  })\n  const[isLoading, setIsLoading] = useState(false)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setLoginData((state) => ({ ...state, [name]: value }));\n  };\n\n  const handleSubmit = useRecoilCallback( async ({set}) => {\n    setIsLoading(true)\n    const { data } = await submitLogin(loginData)\n    console.log(`data`, data)\n    if(!data.success){\n      toast({\n        title:data.message,\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      })\n    }else{\n      set(authState, {...authState, token:data?.data.token, isAuthenticated:true})\n      history.push(\"/\")\n    }\n    setIsLoading(false)\n  })\n\n  return (\n    <Box\n      className=\"login-page-wrapper\"\n      d=\"flex\"\n      flexDir=\"column\"\n      minW=\"100%\"\n      minH=\"100vh\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      <Box\n        className=\"login-box\"\n        p={8}\n        mb={3}\n        bg=\"white\"\n        minW={[cardWidth.resSize,cardWidth.resSize,cardWidth.webSize]}\n        maxW={cardWidth.webSize}\n        border=\"1px solid\"\n        borderColor=\"borderColor.500\"\n        borderTop=\"5px solid\"\n        borderTopColor=\"primary.500\"\n      >\n      <Box mb={10} d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n        <Image src={SmartCanteenLogo} boxSize=\"50%\"/>\n      </Box>\n        <Box mb={4}>\n          <FormLabel for=\"email\">Email Address</FormLabel>\n          <InputGroup>\n            <Input type=\"text\" name=\"email\" borderRadius=\"0\" onChange={handleChange}/>\n          </InputGroup>\n        </Box>\n\n        <Box mb={8}>\n          <FormLabel for=\"password\">Password</FormLabel>\n          <InputGroup>\n            <Input type=\"password\" name=\"password\" borderRadius=\"0\" onChange={handleChange}/>\n          </InputGroup>\n        </Box>\n\n        <Box mb={1}>\n          <Button bgColor=\"primary.500\" color=\"white\" borderRadius=\"0\" w=\"100%\" onClick={handleSubmit} isLoading={isLoading}>\n            Login\n          </Button>\n        </Box>\n      </Box>\n\n      <Box\n        className=\"login-box\"\n        p={4}\n        bg=\"white\"\n        minW={[cardWidth.resSize,cardWidth.resSize,cardWidth.webSize]}\n        maxW={cardWidth.webSize}\n        border=\"1px solid\"\n        borderColor=\"borderColor.500\"\n        textAlign=\"center\"\n      >\n        Forgot Password? <Text as=\"u\"><a href=\"#\">Contact Developer</a></Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport { authState } from 'recoil/authentication'\n\nconst ProtectedRoute = ({component: Component, ...rest }) => {\n    const status = useRecoilValue(authState)\n    return(\n        <Route\n            {...rest}\n            render={\n                (props) => (status?.isAuthenticated ? <Component {...props}/> : <Redirect to=\"/login\"/>)\n            }\n        />\n    )\n}\n\nexport default ProtectedRoute","import React from \"react\";\nimport { useLocation } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerCloseButton,\n  Button,\n  Image,\n  Box,\n  Text\n} from \"@chakra-ui/react\";\nimport SmartCanteenLogo from 'assets/images/SmartCanteenLogo.svg'\n\nimport { ProfileCard } from 'components/shared'\nconst menuList = [\n    {label:'home', uri:'/'},\n    {label:'seller', uri:'/seller'},\n]\n\nconst DashboardDrawer = () => {\n    const currentPath = useLocation().pathname;\n  return (\n    <Drawer variant='alwaysOpen' isOpen placement=\"left\" motionPreset=\"none\" autoFocus={false} blockScrollOnMount={false} closeOnOverlayClick={false} trapFocus={false} useInert={false}>\n      <DrawerContent>\n        <DrawerHeader mb={12}>\n            <Box d=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n                <Image src={SmartCanteenLogo} boxSize=\"85%\"/>\n            </Box>\n            </DrawerHeader>\n        <DrawerBody>\n        <Link to=\"/profile\">\n            <Box mb={5}>\n                <ProfileCard/>\n            </Box>\n        </Link>\n        {menuList.map((menu,index) =>\n            <Link to={menu.uri} key={index}>\n                <Button colorScheme=\"primary\"  mb={5} variant={currentPath === menu.uri ? 'solid' : 'ghost'} width=\"100%\" >\n                    <Text w=\"100%\" textAlign=\"left\" textTransform=\"capitalize\">\n                        {menu.label}\n                    </Text>\n                </Button>\n            </Link>\n        \n        )}\n        </DrawerBody>\n        <DrawerFooter>\n          <Box>\n              <Text fontSize=\"sm\">\n                &copy; SmartCanteen 2021 - All Rights Reserved.\n              </Text>\n          </Box>\n        </DrawerFooter>\n      </DrawerContent>\n    </Drawer>\n  );\n};\n\nexport default DashboardDrawer;\n","import React from 'react'\nimport { Box, Button } from '@chakra-ui/react'\nconst DashboardContent = ({children}) => {\n    return ( <Box marginLeft=\"320px\" p={5} px={8}>{children}</Box> )\n}\n\nexport default DashboardContent\n","export default __webpack_public_path__ + \"static/media/ProfileAvatar.b38ffd49.svg\";","import React, { useEffect, useState } from 'react'\nimport { Box, Text, Image } from '@chakra-ui/react'\nimport ProfileAvatar from 'assets/images/ProfileAvatar.svg'\nimport { getProfile } from 'configs/api'\nimport { useRecoilValue } from 'recoil'\nimport { authState, authProfileData } from 'recoil/authentication'\nconst ProfileCard = () => {\n    const[profileData, setProfileData] = useState({\n        firstName:'',\n        email:''\n    })\n    const {token} = useRecoilValue(authState)\n    const lastProfileData = useRecoilValue(authProfileData)\n\n    useEffect(() => {\n        const getProfileData = async () => {\n            const response = await getProfile(token)\n            setProfileData({...profileData, firstName:response?.data.data.first_name, email:response?.data.data.email})\n        }\n\n        // avoid fetching every visit /home route, get from localStorage\n        const setLastProfileData = async () => {\n            console.log(`lastProfileData`, lastProfileData)\n            setProfileData({...profileData, firstName:lastProfileData?.first_name, email:lastProfileData?.email})\n        }\n\n        if(lastProfileData===null){\n            getProfileData()\n        }else{\n            setLastProfileData()\n        }\n    }, [])\n    return (\n        <Box p={4} bgColor=\"primary.500\" borderRadius={8} d=\"inline-flex\">\n            <Image src={ProfileAvatar} boxSize=\"25%\" mr={3}/>\n            <Box py={1} color=\"white\" >\n                <Box d=\"inline-flex\" alignItems=\"center\">\n                <Text mr={1}>Hi,</Text>\n                <Text fontSize=\"xl\" as=\"b\" textTransform=\"capitalize\">{profileData.firstName}</Text>\n\n                </Box>\n                <Text fontSize=\"sm\">{profileData.email}</Text>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ProfileCard\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { Breadcrumb, BreadcrumbItem, Text } from '@chakra-ui/react'\nconst DashboardBreadcrumb = props => {\n    const { breadcrumbData } = props\n    return (\n        <Breadcrumb>\n            {breadcrumbData?.map( (item, index) =>\n                <BreadcrumbItem key={index}>\n                    <Link to={item.uri}>\n                        <Text textTransform=\"capitalize\" fontWeight={index === breadcrumbData.length-1 ? 'bold' : 'normal'}>\n                            {item.label}\n                        </Text>\n                    </Link>\n                </BreadcrumbItem>\n            )}\n        </Breadcrumb>\n    )\n}\n\nexport default DashboardBreadcrumb\n\nDashboardBreadcrumb.propTypes = {\n    breadcrumbData: PropTypes.arrayOf(Object)\n}","import React from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  Icon,\n  Box,\n  Text,\n  useToast\n} from \"@chakra-ui/react\";\nimport { ChevronDownIcon, SettingsIcon } from \"@chakra-ui/icons\";\nimport { useRecoilCallback } from 'recoil'\nimport { authState } from 'recoil/authentication'\nimport { logout } from 'configs/api'\nconst SettingsButton = () => {\n    const history = useHistory()\n    const toast = useToast()\n    const handleLogout = useRecoilCallback( async ({set}) => {\n    const { message, success } = await logout()\n        if(success){\n            toast({\n                title:message,\n                status: \"success\",\n                duration: 9000,\n                isClosable: true,\n            })\n            set(authState, {...authState, token:'', isAuthenticated:false})\n            history.push(\"/login\")\n        }\n    })\n  return (\n    <Menu>\n      <MenuButton as={Button} rightIcon={<ChevronDownIcon />} bgColor=\"transparent\">\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n          <Icon as={SettingsIcon} mr={1} />\n          <Text>Settings</Text>\n        </Box>\n      </MenuButton>\n      <MenuList>\n        <MenuItem>\n          <Button isFullWidth variant=\"ghost\" onClick={handleLogout}>Logout</Button>\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  );\n};\n\nexport default SettingsButton;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Heading, Text } from '@chakra-ui/react'\nconst StatsCard = props => {\n    const { background, description, value } = props\n    /*\n        Total Transaksi\n        Total Pendapatan\n        \n    */\n    return (\n        <Box {...props} className=\"stats-card\" minW=\"20%\" minH=\"120px\" display=\"flex\" flexDir=\"column\" alignItems=\"center\" justifyContent=\"center\" p={4} borderRadius={8} color=\"white\">\n            <Heading mb=\"2\" size=\"2xl\">{value}</Heading>\n            <Text textTransform=\"capitalize\">{description}</Text>\n        </Box>\n    )\n}\n\nStatsCard.propTypes = {\n    background:PropTypes.string,\n    description:PropTypes.string,\n    value:PropTypes.number\n}\nexport default StatsCard\n","import React from 'react'\nimport { SimpleGrid, } from '@chakra-ui/react'\nimport { StatsCard } from 'components/shared'\nconst StatsList = ({children}) => {\n    return (\n        <React.Fragment>\n            <SimpleGrid columns={{ sm: 1, md: 2, lg: 4 }} spacing={5}>\n                {children}\n            </SimpleGrid>\n        </React.Fragment>\n    )\n}\n\nexport default StatsList\n","export default __webpack_public_path__ + \"static/media/morning-bg.ef808022.svg\";","export default __webpack_public_path__ + \"static/media/night-bg.d394270a.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Box, Heading, Text } from \"@chakra-ui/react\";\n\nimport { useRecoilValue } from 'recoil'\nimport { authProfileData } from 'recoil/authentication'\nimport MorningImage from \"assets/images/morning-bg.svg\";\nimport NightImage from \"assets/images/night-bg.svg\";\n\nconst GreetingCard = () => {\n    const currentDate = new Date()\n    const profileData = useRecoilValue(authProfileData)\n\n    const currentStatus = (currentDate) => {\n        if(currentDate.getHours() < 12) return 'morning'\n        else if(currentDate.getHours() < 18) return 'afternoon'\n        else return 'night'\n    }\n  const [currentTime, setCurrentTime] = useState({\n      hours:currentDate.getHours(),\n      minutes:currentDate.getMinutes(),\n      seconds:currentDate.getSeconds(),\n    })\n    \n    \n    useEffect(() => {\n        setInterval(()=> {\n            const updateDate = new Date()\n            setCurrentTime({\n            ...currentTime,\n            hours: updateDate.getHours(),\n            minutes: updateDate.getMinutes(),\n            seconds:updateDate.getSeconds()\n        })\n      },1000)\n      console.log(\"kboom\")\n  }, [])\n\n  let clockColor = \"\"\n  let captionColor = \"\"\n  let greetingText = \"\"\n  let bgImage = null\n  switch (currentStatus(currentDate)) {\n    case \"night\":\n      clockColor = \"#F39C12\"\n      captionColor = \"#FFF\"\n      greetingText = \"Have a Nice Dream\"\n      bgImage = NightImage\n      break;\n    case \"morning\":\n    case \"afternoon\":\n        clockColor = \"#182C61\"\n        captionColor = \"#222445\"\n        greetingText = \"Have a Nice Day\"\n        bgImage = MorningImage\n      break;\n\n    default:\n        clockColor = \"#000\";\n        captionColor = \"#000\"\n  }\n  return (\n    <Box\n      d=\"flex\"\n      flexDir=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      p={4}\n      borderRadius={8}\n      bgImage={`url(${bgImage})`}\n      bgSize=\"cover\"\n      minH=\"250px\"\n      bgPos=\"bottom\"\n      bgRepeat=\"no-repeat\"\n    >\n      <Box mb=\"-3px\">\n        <Heading fontSize=\"100px\" textColor={currentStatus(currentDate) === 'night' ? '#F39C12' : '#182C61'}>{(currentTime.hours<10?'0':'') + currentTime.hours}:{(currentTime.minutes<10?'0':'') + currentTime.minutes}</Heading>\n      </Box>\n      <Box textAlign=\"center\">\n          <Text fontSize=\"40px\" fontWeight=\"bold\" textColor={captionColor} textTransform=\"capitalize\">Good {currentStatus(currentDate)}, {profileData?.first_name + ' ' + profileData?.last_name}</Text>\n          <Text fontSize=\"20px\" textColor={captionColor} textTransform=\"capitalize\">{greetingText}</Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default GreetingCard;\n","import React from 'react'\nimport { Box } from '@chakra-ui/react'\nimport { SettingsButton, DashboardContent } from 'components/shared'\n\nconst DashboardTopNav = ({children}) => {\n    return (\n        <Box className=\"top-navigation-wrapper\" bgColor=\"white\" shadow=\"sm\">\n            <DashboardContent>\n                <Box d=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n                    {children}\n                    <SettingsButton/>\n                </Box>\n            </DashboardContent>\n        </Box>\n    )\n}\n\nexport default DashboardTopNav\n","export default __webpack_public_path__ + \"static/media/SellerAvatar.c7610993.svg\";","import React from \"react\";\nimport PropTypes from 'prop-types'\nimport { Box, Button, Divider, Heading, Image, Text } from \"@chakra-ui/react\";\nimport { PhoneIcon } from \"@chakra-ui/icons\";\nimport SellerAvatar from \"assets/images/SellerAvatar.svg\";\nimport { Link } from \"react-router-dom\";\n\nconst cardWidth = \"100%\";\n// const cardWidth = \"250px\";\nconst cardHeight = \"300px\";\nconst cardBorderRad = 12\nconst SellerProfileCard = props => {\n  const { sellerName, sellerDesc, sellerPhone } = props\n  const link = \"/seller/detail/\"+sellerDesc\n  return (\n    <Box\n      minH={cardHeight}\n      maxH={cardHeight}\n      borderRadius={cardBorderRad}\n      minW={cardWidth}\n      maxW={cardWidth}\n      pb={0}\n      pt={5}\n      shadow=\"md\"\n      bgColor=\"white\"\n      d=\"inline-flex\"\n    >\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        \n      >\n        <Image src={SellerAvatar} boxSize=\"30%\" mt={3} mb={4} />\n        <Box textAlign=\"center\" px={4}>\n          <Box my={2}>\n            <Heading fontSize=\"lg\" mb={2}>\n              { sellerName }\n            </Heading>\n            <Text>{ sellerDesc }</Text>\n          </Box>\n          <Divider />\n          <Box\n            my={4}\n            d=\"inline-flex\"\n            alignItems=\"center\"\n            className=\"phone-number\"\n          >\n            <PhoneIcon color=\"blackAlpha.700\" mr={1} />\n            <Text color=\"blackAlpha.700\">{ sellerPhone }</Text>\n          </Box>\n        </Box>\n        <Box minW=\"100%\">\n          <Link to={link}>\n            <Button\n              borderRadius=\"0\"\n              bgColor=\"primary.500\"\n              color=\"white\"\n              isFullWidth\n              minH=\"55px\"\n              borderBottomRadius={cardBorderRad}\n            >\n              Details\n            </Button>\n          </Link>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nSellerProfileCard.propTypes = {\n  sellerName: PropTypes.string,\n  sellerDesc: PropTypes.string,\n  sellerPhone: PropTypes.string\n}\nexport default SellerProfileCard;\n","import React, { useState, useEffect } from \"react\";\nimport { Box, Heading, SimpleGrid, Spinner } from \"@chakra-ui/react\";\nimport { SellerProfileCard } from \"components/shared\";\nimport { getAllSeller } from \"configs/api\";\nimport { useRecoilValue } from \"recoil\";\nimport { authState } from \"recoil/authentication\";\nconst SellerProfileList = props => {\n  const { token } = useRecoilValue(authState);\n  const [sellerData, setSellerData] = useState();\n  useEffect(() => {\n    const getAllSellerData = async () => {\n      const response = await getAllSeller(token);\n      console.log(`responsesadsad`, response)\n      const { data } = response?.data\n      if(response.data.success){\n          await setSellerData(data);\n          props.updateTotalSeller(data.length)\n      }\n    };\n\n    getAllSellerData();\n  }, []);\n  console.log(`sellerData`, sellerData)\n\n  if (sellerData === undefined){\n      return(\n          <React.Fragment>\n              <Spinner/>\n          </React.Fragment>\n      )\n  }\n\n  return (\n    <React.Fragment>\n      <Heading fontSize=\"xx-large\" mb={3}>Seller Lists</Heading>\n      <SimpleGrid columns={{ sm: 2, md: 3, lg: 4 }} spacing={5}>\n        {sellerData?.map((seller, index) => (\n          <SellerProfileCard key={index} sellerName={seller.first_name} sellerDesc={seller.id_penjual} sellerPhone={seller.no_telp}/>\n        ))}\n      </SimpleGrid>\n    </React.Fragment>\n  );\n};\n\nexport default SellerProfileList;\n","import React from 'react'\nimport { Box, Heading } from '@chakra-ui/react'\nimport { DashboardDrawer, DashboardContent, DashboardBreadcrumb, GreetingCard, DashboardTopNav } from 'components/shared'\n\nconst breadCrumbItem = [\n    {label:'home', uri:'/'},\n]\n\nconst Dashboard = () => {\n    return (\n        <Box minH=\"100vh\">\n            <DashboardDrawer/>\n\n            <DashboardTopNav>\n                <DashboardBreadcrumb breadcrumbData={breadCrumbItem}/>\n            </DashboardTopNav>\n            \n            <DashboardContent>\n                <GreetingCard/>\n                {/* <Box className=\"stats-wrapper\" d=\"flex\" w=\"100%\" bgColor=\"pink\" justifyContent=\"\">\n                    <StatsCard bgColor=\"primary.500\"/>\n                    <StatsCard bgColor=\"primary.500\"/>\n                    <StatsCard bgColor=\"primary.500\"/>\n                    <StatsCard bgColor=\"primary.500\"/>\n                </Box> */}\n                {/* <Box>\n\n                </Box> */}\n            </DashboardContent>\n        </Box>\n    )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport { DashboardDrawer } from 'components/shared'\nconst Profile = () => {\n    return (\n        <div>\n            <DashboardDrawer/>\n            ini profile\n        </div>\n    )\n}\n\nexport default Profile\n","import React, { useState } from \"react\";\nimport { Box, SimpleGrid, Container, Heading } from \"@chakra-ui/react\";\nimport {\n  DashboardDrawer,\n  DashboardTopNav,\n  DashboardBreadcrumb,\n  DashboardContent,\n  SellerProfileCard,\n  StatsCard,\n  SellerProfileList,\n  StatsList,\n} from \"components/shared\";\n\nconst breadCrumbItem = [{ label: \"seller\", uri: \"/seller\" }];\nconst Seller = () => {\n  const [totalSeller, setTotalSeller] = useState();\n  return (\n    <Box minH=\"100vh\">\n      <DashboardDrawer />\n\n      <DashboardTopNav>\n        <DashboardBreadcrumb breadcrumbData={breadCrumbItem} />\n      </DashboardTopNav>\n\n      <DashboardContent minH=\"100vh\">\n        <Container className=\"seller-profile-box-container\" maxW=\"100%\" mb={8}>\n          <StatsList>\n            <StatsCard\n              background=\"primary.900\"\n              value={totalSeller}\n              description=\"Total All Sellers\"\n            />\n          </StatsList>\n        </Container>\n        <Container className=\"seller-profile-box-container\" maxW=\"100%\">\n          <SellerProfileList updateTotalSeller={setTotalSeller} />\n        </Container>\n      </DashboardContent>\n    </Box>\n  );\n};\n\nexport default Seller;\n","import React, { useState } from 'react'\nimport { Box, Container, Heading, FormLabel, InputGroup, Input, Button  } from '@chakra-ui/react'\nimport { DashboardDrawer, DashboardTopNav, DashboardBreadcrumb, DashboardContent,  } from 'components/shared'\nimport { authState } from 'recoil/authentication'\nimport { useRecoilCallback, useRecoilValue } from \"recoil\";\n\nimport { registerSeller } from 'configs/api'\nconst breadCrumbItem = [\n    { label: \"seller\", uri: \"/seller\" },\n    { label: \"add seller\", uri: \"/seller-add\"}\n];\n\n// first_namePenjual\n// last_nameBaru\n// emailjualan2@gmail.com\n// passwordpenjual2\n// no_telp0812345462\n\nconst SellerAdd = () => {\n    const {token} = useRecoilValue(authState);\n    const [sellerData, setSellerData] = useState({\n        firstName:'',\n        lastName:'',\n        email:'',\n        password:'',\n        phoneNumber:''\n    })\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setSellerData((state) => ({ ...state, [name]: value }));\n      };\n\n    const handleSubmit = useRecoilCallback( async ({set}) => {\n        const { data } = await registerSeller(token, sellerData)\n        if(data.success){\n            console.log(data)\n        }\n    })\n    //   console.log(`sellerData`, sellerData)\n    return (\n        <Box minH=\"100vh\">\n            <DashboardDrawer />\n            <DashboardTopNav>\n                <DashboardBreadcrumb breadcrumbData={breadCrumbItem} />\n            </DashboardTopNav>\n\n            <DashboardContent minH=\"100vh\">\n            <Container className=\"seller-add-box-container\" maxW=\"100%\" mb={8}>\n                <Heading>\n                    Add Seller\n                </Heading>\n                <Box bgColor=\"#FFF\" my={5} p={8} maxWidth=\"50%\">\n                    <Box mb={4}>\n                        <FormLabel for=\"firstName\">First Name</FormLabel>\n                        <InputGroup>\n                            <Input type=\"text\" name=\"firstName\" borderRadius=\"0\" onChange={handleChange}/>\n                        </InputGroup>\n                    </Box>\n                    <Box mb={4}>\n                        <FormLabel for=\"lastName\">Last Name</FormLabel>\n                        <InputGroup>\n                            <Input type=\"text\" name=\"lastName\" borderRadius=\"0\" onChange={handleChange}/>\n                        </InputGroup>\n                    </Box>\n                    <Box mb={4}>\n                        <FormLabel for=\"email\">Email</FormLabel>\n                        <InputGroup>\n                            <Input type=\"text\" name=\"email\" borderRadius=\"0\" onChange={handleChange}/>\n                        </InputGroup>\n                    </Box>\n                    <Box mb={4}>\n                        <FormLabel for=\"password\">Password</FormLabel>\n                        <InputGroup>\n                            <Input type=\"password\" name=\"password\" borderRadius=\"0\" onChange={handleChange}/>\n                        </InputGroup>\n                    </Box>\n                    <Box mb={4}>\n                        <FormLabel for=\"phoneNumber\">Phone Number</FormLabel>\n                        <InputGroup>\n                            <Input type=\"text\" name=\"phoneNumber\" borderRadius=\"0\" onChange={handleChange}/>\n                        </InputGroup>\n                    </Box>\n                    <Button bgColor=\"primary.500\" color=\"white\" borderRadius=\"0\" onClick={handleSubmit}>\n                        Register\n                    </Button>\n                </Box>\n            </Container>\n            </DashboardContent>\n        </Box>\n    )\n}\n\nexport default SellerAdd\n","import React, { useState, useEffect } from 'react'\nimport { Box, Container, Heading, Text, Image, Flex, Center } from '@chakra-ui/react'\nimport { DashboardDrawer, DashboardTopNav, DashboardBreadcrumb, DashboardContent } from 'components/shared'\nimport { authState } from 'recoil/authentication'\nimport { useRecoilCallback, useRecoilValue } from \"recoil\";\nimport { getSellerByAdmin, getSellerFood } from \"configs/api\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableRow from '@material-ui/core/TableRow';\nimport ProfileAvatar from 'assets/images/ProfileAvatar.svg'\nimport { Edit, Delete } from '@material-ui/icons';\n\n\n\n// first_namePenjual\n// last_nameBaru\n// emailjualan2@gmail.com\n// passwordpenjual2\n// no_telp0812345462\n\nconst SellerDetail = (props) => {\n    const { token } = useRecoilValue(authState);\n    const { uuid } = props.match.params\n    const [sellerData, setSellerData] = useState();\n    const [foodData, setFoodData] = useState();\n    useEffect(() => {\n        const getFood = async (uuid) => {\n            const response = await getSellerFood(uuid);\n            const { data } = response?.data\n            if (response.data.success) {\n                await setFoodData(data);\n            }\n\n        }\n\n        const getSellerData = async () => {\n            const response = await getSellerByAdmin(token, uuid);\n            console.log(`sellerbyadmin`, response)\n            const { data } = response?.data\n            if (response.data.success) {\n                await setSellerData(data);\n                getFood(data?.tenant.id_warung);\n            }\n        };\n\n        getSellerData();\n    }, []);\n    const breadCrumbItem = [\n        { label: \"seller\", uri: \"/seller\" },\n        { label: \"Detail\", uri: \"/seller/detail/\" + sellerData?.id_penjual }\n    ];\n    const useStyles = makeStyles({\n        root: {\n            minWidth: 275,\n            margin: 2\n        },\n        pos: {\n            marginBottom: 12,\n        },\n    });\n    return (\n        <Box minH=\"100vh\">\n            <DashboardDrawer />\n            <DashboardTopNav>\n                <DashboardBreadcrumb breadcrumbData={breadCrumbItem} />\n            </DashboardTopNav>\n            <DashboardContent minH=\"100vh\">\n                <Container className=\"booth-add-box-container\" maxW=\"100%\" mb={8}>\n                    <Box p={4} bgColor=\"primary.500\" maxW=\"100%\">\n                        <Flex>\n                            <Image src={ProfileAvatar} boxSize=\"7%\" mr={4} />\n                            <Center>\n                                <Box color=\"white\" justifyContent=\"center\" py={1} >\n                                    <Heading>\n                                        {sellerData?.first_name + \" \" + sellerData?.last_name}\n                                    </Heading>\n                                    <Text style={{ fontSize: \"24px\" }}>\n                                        {sellerData?.tenant.nama_warung}\n                                    </Text>\n                                </Box>\n                            </Center>\n                            <Edit style={{ color: \"white\" }} />\n                            <Delete style={{ color: \"white\" }} />\n                        </Flex>\n                    </Box>\n                    <Card >\n                        <TableContainer>\n                            <TableRow>\n                                <TableCell><Text>\n                                    <span style={{ fontWeight: \"bold\" }}>{\"Id Penjual\"}</span>\n                                </Text></TableCell>\n                                <TableCell>{\":\"}</TableCell>\n                                <TableCell>{uuid}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Text>\n                                    <span style={{ fontWeight: \"bold\" }}>{\"Email\"}</span>\n                                </Text></TableCell>\n                                <TableCell>{\":\"}</TableCell>\n                                <TableCell>{sellerData?.email}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Text>\n                                    <span style={{ fontWeight: \"bold\" }}>{\"No. Telepon\"}</span>\n                                </Text></TableCell>\n                                <TableCell>{\":\"}</TableCell>\n                                <TableCell>{sellerData?.no_telp}</TableCell>\n                            </TableRow>\n                            <TableRow>\n                                <TableCell><Text>\n                                    <span style={{ fontWeight: \"bold\" }}>{\"Tenant\"}</span>\n                                </Text></TableCell>\n                                <TableCell>{\":\"}</TableCell>\n                                <TableCell>{sellerData?.tenant.nama_warung}</TableCell>\n                            </TableRow>\n                        </TableContainer>\n                    </Card>\n\n                    {foodData?.map((food, index) => {\n                        console.log(food)\n                    })\n                    }\n                </Container>\n            </DashboardContent>\n        </Box >\n    )\n}\n\nexport default SellerDetail\n","import React from 'react'\nimport { createBrowserHistory } from 'history'\nimport { Box } from '@chakra-ui/react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { Login, ProtectedRoute, Dashboard, Profile, Seller, SellerAdd, SellerDetail } from 'components/pages'\n\nexport const history = createBrowserHistory()\nconst App = () => {\n  return (\n    <Box className=\"App\" bgColor=\"bgcolor.500\">\n      <Router history>\n        <Switch>\n          <Route path=\"/login\" component={Login} exact/>\n          <ProtectedRoute path=\"/\" component={Dashboard} exact/>\n          <ProtectedRoute path=\"/profile\" component={Profile} exact/>\n          <ProtectedRoute path=\"/seller\" component={Seller} exact/>\n          <ProtectedRoute path=\"/seller-add\" component={SellerAdd} exact/>\n          <ProtectedRoute path=\"/seller/detail/:uuid\" component={SellerDetail} exact/>\n        </Switch>\n      </Router>\n    </Box>\n  )\n}\n\nexport default App\n","import { extendTheme } from '@chakra-ui/react'\n\nconst components = {\n\tDrawer: {\n\t\tvariants: {\n\t\t\talwaysOpen: {\n\t\t\t\tparts: ['dialog, dialogContainer'],\n\t\t\t\tdialog: {\n\t\t\t\t\tpointerEvents: 'auto',\n\t\t\t\t},\n\t\t\t\tdialogContainer: {\n\t\t\t\t\tpointerEvents: 'none',\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n};\n\nconst customTheme = extendTheme({\n    colors:{\n        primary:{\n            500:'#3F51B5', // Primary\n            900:'#303F9F'  // Dark-Primary\n        },\n        bgcolor:{\n            500:'#f1f1f1'\n        },\n        borderColor:{\n            500:'#ccd0d4'\n        }\n    },\n    components:components\n})\n\nexport default customTheme","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ChakraProvider, CSSReset } from \"@chakra-ui/react\";\nimport App from \"./App\";\nimport customTheme from \"./theme\";\n\nReactDOM.render(\n  <ChakraProvider theme={customTheme}>\n    <React.StrictMode>\n      <CSSReset />\n      <RecoilRoot>\n        <App />\n      </RecoilRoot>\n    </React.StrictMode>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}